# Here you can define all your data sets by using simple YAML syntax.
#
# Documentation for this file format can be found in "The Data Catalog"
# Link: https://docs.kedro.org/en/stable/data/data_catalog.html
#
# We support interacting with a variety of data stores including local file systems, cloud, network and HDFS
#
# An example data set definition can look as follows:
#
#bikes:
#  type: pandas.CSVDataset
#  filepath: "data/01_raw/bikes.csv"
#
#weather:
#  type: spark.SparkDataset
#  filepath: s3a://your_bucket/data/01_raw/weather*
#  file_format: csv
#  credentials: dev_s3
#  load_args:
#    header: True
#    inferSchema: True
#  save_args:
#    sep: '|'
#    header: True
#
#scooters:
#  type: pandas.SQLTableDataset
#  credentials: scooters_credentials
#  table_name: scooters
#  load_args:
#    index_col: ['name']
#    columns: ['name', 'gear']
#  save_args:
#    if_exists: 'replace'
#    # if_exists: 'fail'
#    # if_exists: 'append'
#
# The Data Catalog supports being able to reference the same file using two different Dataset implementations
# (transcoding), templating and a way to reuse arguments that are frequently repeated. See more here:
# https://docs.kedro.org/en/stable/data/data_catalog.html

# PROJECT DATA CATALOG
raw_loans:
  type: pandas.CSVDataset
  filepath: data/01_raw/raw_loans.csv

cleaned_loans:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/cleaned_loans.csv

reporting_tests:
  type: pandas.CSVDataset
  filepath: data/05_intermediate/data_tests.csv

ingested_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/ingested_data.csv

ref_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/ref_data.csv

ana_data:
  type: pandas.CSVDataset
  filepath: data/02_intermediate/ana_data.csv

preprocessed_train_data:
  type: pandas.CSVDataset
  filepath: data/03_primary/preprocessed_train_data.csv

reporting_data_train:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/reporting_data_train.json

preprocessed_batch_data:
  type: pandas.CSVDataset
  filepath: data/03_primary/preprocessed_batch_data.csv

validated_feature_engineered_batch:
  type: pandas.CSVDataset
  filepath: data/05_intermediate/validated_feature_engineered_batch.csv
  #layer: intermediate

feature_created_batch:
  type: pandas.CSVDataset
  filepath: data/07_model_input/feature_created_batch.csv
  save_args:
    index: False

trained_standard_scaler:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/04_feature/scaler.pkl

trained_one_hot_encoder:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/04_feature/encoder.pkl

X_train:
 type: pandas.CSVDataset
 filepath: data/05_model_input/X_train.csv

y_train:
 type: pandas.CSVDataset
 filepath: data/05_model_input/y_train.csv

X_test:
 type: pandas.CSVDataset
 filepath: data/05_model_input/X_test.csv

y_test:
 type: pandas.CSVDataset
 filepath: data/05_model_input/y_test.csv

production_columns:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_cols.pkl

final_columns:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/final_cols.pkl

train_columns:
 type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
 dataset:
   type: pickle.PickleDataset
   filepath: data/06_models/train_cols.pkl

best_columns:
 type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
 dataset:
   type: pickle.PickleDataset
   filepath: data/06_models/best_cols.pkl

production_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_model.pkl

final_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/final_model.pkl

final_model_metrics:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/final_model_metrics.json

production_model_metrics:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/production_model_metrics.json

output_plot:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/08_reporting/shap_plot.png

model_metrics:
  type: json.JSONDataset
  filepath: data/08_reporting/model_metrics.json

psi_df:
  type: pandas.CSVDataset
  filepath: data/08_reporting/psi_values.csv

psi_bar_plot:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/08_reporting/psi_bar_plot.png

trained_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_model.pkl

selected_features:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/production_cols.pkl

current_loans_encoded:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/current_loans_encoded.csv

reference_loans_encoded:
  type: pandas.ParquetDataset
  filepath: data/02_intermediate/reference_loans_encoded.csv

champion_model:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: pickle.PickleDataset
    filepath: data/06_models/champion_model.pkl
  
df_with_predict:
  type: pandas.CSVDataset
  filepath: data/07_model_output/df_predictions.csv

predict_describe:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: json.JSONDataset
    filepath: data/08_reporting/predict_describe.json

_parameters: parameters.yml

confusion_matrix:
  type: kedro_mlflow.io.artifacts.MlflowArtifactDataset
  dataset:
    type: matplotlib.MatplotlibWriter
    filepath: data/08_reporting/confusion_matrix.png